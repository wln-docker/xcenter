<div id="app" style="overflow:auto;height:100%;">
    <div class="wln" style="text-align:center;">
        <el-button-group>
            <el-button plain size="mini" type="info" @@click="location.href='/system/account'"><svg class="icon"><use v-bind:xlink:href="'#icon-left'"></use></svg></el-button>
            <el-button v-bind:plain="type!==0" size="mini" type="primary" @@click="topage(0,'')"><svg class="icon"><use v-bind:xlink:href="'#icon-setting'"></use></svg> 系统权限</el-button>
            <el-button v-bind:plain="type!==1" size="mini" type="primary" @@click="topage(1,'')"><svg class="icon"><use v-bind:xlink:href="'#icon-apps'"></use></svg> 业务权限</el-button>
            <el-button v-bind:plain="type!==2" size="mini" type="primary" @@click="topage(2,'')"><svg class="icon"><use v-bind:xlink:href="'#icon-organ'"></use></svg> @Html.Raw(ViewBag.LabelOrgan)权限</el-button>
        </el-button-group>
    </div>
    <div class="wln">
        <router-view></router-view>
    </div>
    <el-dialog title="请选择授权角色" width="360px" :visible.sync="dialogFormVisible">
        <el-form :model="role">
            <el-select v-model="role" placeholder="请选择" style="width:320px">
                <el-option v-for="item in roles" :label="item.label" :value="item.value"></el-option>
            </el-select>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button size="mini" type="primary" @@click="SetRole(1)">确 定</el-button>
            <el-button size="mini" type="danger" @@click="SetRole(0)">删 除</el-button>
            <el-button size="mini" @@click="dialogFormVisible = false">取 消</el-button>
        </div>
    </el-dialog>
</div>
<template id="app-permission">
    <el-table :data="rows" :empty-text="message" style="width:100%">
        <el-table-column width="150" property="name" label="权限名称"></el-table-column>
        <el-table-column property="description" label="权限说明"></el-table-column>
        <el-table-column width="200" label="操作" align="center">
            <template scope="scope">
                <el-button size="mini" icon="el-icon-check" type="success" @@click="Change(scope.row.code)" v-if="scope.row.inlist" :plain="scope.row.empty">已授权</el-button><el-button size="mini" icon="el-icon-close" type="warning" @@click="Change(scope.row.code)" v-else :plain="scope.row.empty">未授权</el-button><el-button size="mini" icon="el-icon-refresh" type="danger" @@click="Remove(scope.row.code)" :plain="scope.row.empty" :disabled="scope.row.empty">重置</el-button>
            </template>
        </el-table-column>
    </el-table>
</template>
<template id="app-organs">
    <el-table :data="rows" :empty-text="message">
        <el-table-column width="210" align="center" property="name" label="@Html.Raw(ViewBag.LabelOrgan)"></el-table-column>
        <el-table-column></el-table-column>
        <el-table-column width="180" align="center" property="rolename" label="授权角色"></el-table-column>
        <el-table-column width="210" align="center" property="create" label="授权时间"></el-table-column>
        <el-table-column width="240" label="操作" align="center">
            <template scope="scope">
                <el-button size="mini" icon="el-icon-sort" type="primary" @@click="setRoles(scope.row.role,scope.row.organ)">角色切换</el-button><el-button size="mini" icon="el-icon-tickets" type="primary" @@click="topage(2,scope.row.organ)">权限详情</el-button>
            </template>
        </el-table-column>
    </el-table>
</template>
<script type="text/javascript">
    $('#app').height($(window).height() - 70);
    function Change(code) {
        if (new Date().getTime() - ts < 10000) {
            return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
        }
        else {
            ts = new Date().getTime();
        }
        $.getJSON(location.pathname, { 'do': 'change', sid: emptyPager.sid, code: code, type: emptyPager.type, organ: emptyPager.organ }, function (rlt) {
            ts = 0;
            if (rlt.success) {
                appPermission.options.methods.refresh();
            }
            app.$message({ type: rlt.success ? 'success' : 'error', message: rlt.message });
        });
    }
    function Remove(code) {
        if (new Date().getTime() - ts < 10000) {
            return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
        }
        else {
            ts = new Date().getTime();
        }
        $.getJSON(location.pathname, { 'do': 'remove', sid: emptyPager.sid, code: code, type: emptyPager.type, organ: emptyPager.organ }, function (rlt) {
            ts = 0;
            if (rlt.success) {
                appPermission.options.methods.refresh();
            }
            app.$message({ type: rlt.success ? 'success' : 'error', message: rlt.message });
        });
    }
    function SetRole(t) {
        if (new Date().getTime() - ts < 10000) {
            return app.$message({ type: 'info', message: '请求正在处理中，请稍候' });
        }
        else {
            ts = new Date().getTime();
        }
        $.getJSON(location.pathname, { 'do': 'setrole', sid: emptyPager.sid, role: t == 0 ? '' : emptyPager.role, organ: emptyPager.organ }, function (rlt) {
            ts = 0;
            if (rlt.success) {
                emptyPager.rows = [];
                emptyPager.dialogFormVisible = false;
                appOrgans.options.methods.refresh();
            }
            app.$message({ type: rlt.success ? 'success' : 'error', message: rlt.message });
        });
    }
    function topage(to, organ) {
        emptyPager.rows = [];
        emptyPager.type = to;
        emptyPager.organ = organ;
        if (to === 2 && organ == '') {
            router.push('/system/permission/organs?sid=' + app.getParam('sid') + '&type=' + to);
        } else {
            router.push('/system/permission/type' + to + '?sid=' + app.getParam('sid') + '&organ=' + organ + '&type=' + to);
            appPermission.options.methods.refresh();
        }
    }
    var appPermission = Vue.extend({
        template: '#app-permission',
        data: function () {
            return emptyPager
        },
        methods: {
            refresh() {
                var _self = this;
                this.message = '正在加载角色权限数据';
                $.getJSON(location.pathname, { 'do': 'authority', page: 1, rows: 1000, sid: emptyPager.sid, organ: emptyPager.organ, type: emptyPager.type, key: emptyPager.key }, function (rlt) {
                    emptyPager.message = rlt.message;
                    emptyPager.total = rlt.total;
                    emptyPager.index = rlt.index;
                    emptyPager.size = rlt.size;
                    emptyPager.rows = rlt.rows;
                });
            }
        }, created() {
            this.refresh();
        }
    })
    var appOrgans = Vue.extend({
        template: '#app-organs',
        data: function () {
            return emptyPager
        },
        methods: {
            refresh() {
                $.getJSON(location.pathname, { 'do': 'organs', sid: emptyPager.sid }, function (data) {
                    if (data && data.length > 0) {
                        emptyPager.rows = data;
                    } else {
                        emptyPager.message = '暂无可配置的权限';
                    }
                });
            },
            setRoles(role, organ) {
                emptyPager.role = role;
                emptyPager.organ = organ;
                emptyPager.dialogFormVisible = true;
            }
        }, created() {
            this.refresh();
        }
    })
    var router = new VueRouter({
        mode: 'history', routes: [
            { path: '/system/permission', component: appPermission }
            , { path: '/system/permission/type0', component: appPermission }
            , { path: '/system/permission/type1', component: appPermission }
            , { path: '/system/permission/type2', component: appPermission }
            , { path: '/system/permission/organs', component: appOrgans }
        ]
    });
    var app = new Vue({
        el: '#app', router: router,
        data: function () {
            _t = this.getParam('type');
            emptyPager.type = _t ? parseInt(_t) : 0;
            emptyPager.sid = this.getParam('sid');
            emptyPager.organ = this.getParam('organ');
            emptyPager.dialogFormVisible = false;
            emptyPager.role = '';
            emptyPager.roles = [];
            return emptyPager
        }, created: function () {
            _self = this;
            $.getJSON(location.pathname, { 'do': 'roles' }, function (data) {
                _self.roles = data;
            });
        }
    });
</script>